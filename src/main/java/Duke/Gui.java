package duke;

import javafx.application.Platform;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.ScrollPane;
import javafx.scene.control.TextField;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.AnchorPane;
import javafx.scene.layout.Region;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;

/**
 * This class represents the graphical user interface (GUI) for Duke.
 * It handles user input, displays messages, and manages the overall layout.
 */
public class Gui {
    private Image user = new Image(this.getClass().getResourceAsStream("/images/DaUser.png"));
    private Image duke = new Image(this.getClass().getResourceAsStream("/images/DaDuke.png"));
    private VBox dialogContainer;
    private ScrollPane scrollPane;
    private TextField userInput;
    private final Stage stage;
    private final CommandHandler commandHandler;

    /**
     * Constructs a new GUI instance.
     *
     * @param stage The main stage of the application.
     */
    public Gui(Stage stage) {
        this.stage = stage;
        this.commandHandler = new CommandHandler(this);
    }

    /**
     * Creates and initializes the GUI components.
     *
     * @return The AnchorPane representing the main layout of the GUI.
     */
    public AnchorPane create() {
        scrollPane = new ScrollPane();
        dialogContainer = new VBox();
        scrollPane.setContent(dialogContainer);

        userInput = new TextField();
        Button sendButton = new Button("Send");

        AnchorPane mainLayout = new AnchorPane();
        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);

        // Formatting the window to look as expected
        stage.setTitle("Duke");
        stage.setResizable(false);
        stage.setMinHeight(600.0);
        stage.setMinWidth(400.0);

        mainLayout.setPrefSize(400.0, 600.0);

        scrollPane.setPrefSize(385, 535);
        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);
        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);

        scrollPane.setVvalue(1.0);
        scrollPane.setFitToWidth(true);

        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);

        userInput.setPrefWidth(325.0);

        sendButton.setPrefWidth(55.0);

        AnchorPane.setTopAnchor(scrollPane, 1.0);

        AnchorPane.setBottomAnchor(sendButton, 1.0);
        AnchorPane.setRightAnchor(sendButton, 1.0);

        AnchorPane.setLeftAnchor(userInput, 1.0);
        AnchorPane.setBottomAnchor(userInput, 1.0);

        // Adding Functionality to handle user input
        sendButton.setOnMouseClicked((event) -> {
            handleUserInput();
        });

        userInput.setOnAction((event) -> {
            handleUserInput();
        });

        // Scroll down to the end every time dialogContainer's height changes.
        dialogContainer.heightProperty().addListener((observable) -> scrollPane.setVvalue(1.0));

        return mainLayout;
    }

    /**
     * Handles the user's input, processes it, and displays the appropriate response.
     */
    private void handleUserInput() {
        Label userText = new Label(userInput.getText());
        String response = getResponse(userInput.getText());

        // Closes Duke if the user says "bye"
        if (response.equals("bye")) {
            close();
        }

        Label dukeText = new Label(response);
        dialogContainer.getChildren().addAll(
                new DialogBox(userText, new ImageView(user)),
                new DialogBox(dukeText, new ImageView(duke))
        );
        userInput.clear();
    }

    /**
     * Gets the response for a given user input by executing the corresponding command.
     *
     * @param input The user's input.
     * @return The response generated by executing the command.
     */
    private String getResponse(String input) {
        String response;
        try {
            response = commandHandler.executeCommand(input);
        } catch (DukeException e) {
            response = e.getMessage();
        }
        return response;
    }

    /**
     * Generates a greeting message and displays it in the GUI.
     */
    public void greet() {
        String greeting = " /\\_/\\ \n" +
                "((@v@)) \n" +
                "():::() \n" +
                " VV-VV \n" +
                "What can I do for you?";

        Label label = new Label(greeting);
        dialogContainer.getChildren().addAll(new DialogBox(label, new ImageView(duke)));
    }

    /**
     * Closes the Duke application.
     */
    public void close() {
        stage.close();
        Platform.exit();
    }
}
